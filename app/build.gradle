apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        config {
            keyAlias 'jcasafont'
            keyPassword 'udacity2018'
            storeFile file("$rootDir/keystore/sharedtasks.jks")
            storePassword 'udacity2018'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.jcr.sharedtasks"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.jcr.sharedtasks.util.SharedTasksTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:preference-v7:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    // Room
    implementation "android.arch.persistence.room:runtime:$persistence_version"
    kapt "android.arch.persistence.room:compiler:$persistence_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    //Dagger
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //Firebase
    implementation "com.google.firebase:firebase-core:$firebase_version"
    implementation "com.google.firebase:firebase-database:$firebase_version"
    implementation "com.google.firebase:firebase-auth:$firebase_version"

    // FirebaseJobDispatcher
    implementation "com.firebase:firebase-jobdispatcher:$firebase_jobdispatcher_version"

    // FirebaseUI
    implementation "com.firebaseui:firebase-ui-auth:$firebase_ui_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Test
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support:support-annotations:$support_version"
    androidTestImplementation "com.android.support.test:runner:$support_test_version"
    androidTestImplementation "com.android.support.test:rules:$support_test_version"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "android.arch.core:core-testing:$lifecycle_version"

    // Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$lifecycle_version"

    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:$persistence_version"

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
}

apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
}
